AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: >
  This template creates a CodePipeline pipeline for serverless web applications that a) pulls source from github,
  b) builds the a serverless web application and c) sets up a CloudFront distribution

Parameters:
  GitHubOAuthToken:
    Description: OAuth token used by AWS CodePipeline to connect to GitHub
    NoEcho: true
    Type: String
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
  GitHubRepo:
    Description: GitHub repo name
    Type: String
  GitHubBranch:
    Description: GitHub repo branch name. It defaults to master if not specified.
    Type: String
    Default: master
  FrontendBucketName:
    Description: Bucket name for frontend. Must be all lower case, numbers and '-', '_'
    Type: String
  UseMockData:
    Description: Set true to use mock data for testing purposes
    Type: String
    Default: false

Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: S3_BUCKET
            Type: PLAINTEXT
            Value: !Ref ArtifactStoreBucket
          - Name: REACT_APP_USE_MOCK
            Type: PLAINTEXT
            Value: !Ref UseMockData
          - Name: REACT_APP_AWS_COGNITO_IDENTITY_POOL_ID
            Type: PLAINTEXT
            Value: '{{resolve:ssm:REACT_APP_AWS_COGNITO_IDENTITY_POOL_ID:1}}'
          - Name: REACT_APP_AWS_REGION
            Type: PLAINTEXT
            Value: !Ref "AWS::Region" # eu-west-1
          - Name: REACT_APP_AWS_USER_POOLS_ID
            Type: PLAINTEXT
            Value: '{{resolve:ssm:REACT_APP_AWS_USER_POOLS_ID:1}}'
          - Name: REACT_APP_AWS_USER_POOLS_WEB_CLIENT_ID
            Type: PLAINTEXT
            Value: '{{resolve:ssm:REACT_APP_AWS_USER_POOLS_WEB_CLIENT_ID:1}}'
          - Name: REACT_APP_DOMAIN
            Type: PLAINTEXT
            Value: '{{resolve:ssm:REACT_APP_AWS_USER_POOLS_WEB_CLIENT_ID:1}}'
          - Name: REACT_APP_REDIRECT_SIGN_IN
            Type: PLAINTEXT
            Value: '{{resolve:ssm:REACT_APP_REDIRECT_SIGN_IN:1}}'
          - Name: REACT_APP_REDIRECT_SIGN_OUT
            Type: PLAINTEXT
            Value: '{{resolve:ssm:REACT_APP_REDIRECT_SIGN_OUT:1}}'
      Source:
        Type: CODEPIPELINE
  NvaFrontendBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref FrontendBucketName

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreBucket
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                OAuthToken: !Ref GitHubOAuthToken
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: true
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !GetAtt CodeBuildProject.Arn
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: MoveApplicationtoS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                BucketName: !Ref FrontendBucketName
                Extract: true
              RunOrder: 1

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketVersioning'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Effect: Allow
                Resource:
                  - !Sub ${ArtifactStoreBucket.Arn}/*
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Effect: Allow
                Resource:
                  - !Sub ${NvaFrontendBucket.Arn}/*
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Effect: Allow
                Resource: !GetAtt CodeBuildProject.Arn
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:*'
        - PolicyName: BucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${ArtifactStoreBucket}/*'

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
